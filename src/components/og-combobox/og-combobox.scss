// =============================================================================
// CSS CUSTOM PROPERTIES
// =============================================================================

:host {

    /**
     * @prop --og-combobox-Background:
     * Main background color of the combobox
     */
    --og-combobox-Background:
        var(--OG-COLOR-SHADE--80--05, #{$og-color-shade--80--05});

    /**
     * @prop --og-combobox-BorderColor:
     * Main border color of the combobox
     */
    --og-combobox-BorderColor:
        var(--OG-COLOR-SHADE--100--20, #{$og-color-shade--100--20});

    /**
     * @prop --og-combobox-BorderWidth:
     * Main border width of the combobox
     */
    --og-combobox-BorderWidth: 1px;

    /**
     * @prop --og-combobox-BorderStyle:
     * Main border style of the combobox
     */
    --og-combobox-BorderStyle: solid;


    /**
     * @prop --og-combobox-Color:
     * Text color of the combobox
     */
    --og-combobox-Color: var(--OG-COLOR-SHADE--100, #{$og-color-shade--100});

    /**
     * @prop --og-combobox-FontSize:
     * Font size of the combobox label
     */
    --og-combobox-FontSize: inherit;

    /**
     * @prop --og-combobox-Outline:
     * Outline of the combobox
     */
    --og-combobox-Outline: none;

    /**
     * @prop --og-combobox-Opacity:
     * Overall opacity of the combobox
     */
    --og-combobox-Opacity: 1;

    /**
     * @prop --og-combobox-Padding:
     * Padding (inner spacing) of the combobox
     */
    --og-combobox-Padding: 25px 0 4px 0;

    /**
     * @prop --og-combobox__placeholder-Color:
     * Text color of the placeholder
     */
    --og-combobox__placeholder-Color:
        var(--OG-COLOR-SHADE--50, #{$og-color-shade--50});


    /**
     * @prop --og-combobox__indicator-Width:
     * Width of the focus indicator
     */
    --og-combobox__indicator-Width: 0;

    /**
     * @prop --og-combobox__indicator-Height:
     * Height of the focus indicator
     */
    --og-combobox__indicator-Height: 2px;

    /**
     * @prop --og-combobox__indicator-Background:
     * Color of the focus indicator
     */
    --og-combobox__indicator-Background:
        var(--OG-COLOR-PRIMARY--100, #{$og-color-primary--100});


    /**
     * @prop --og-combobox__button__arrow-Width:
     * Width of the toggle icon
     */
    --og-combobox__button__arrow-Width: 16px;

    /**
     * @prop --og-combobox__button__arrow-Height:
     * Height of the toggle icon
     */
    --og-combobox__button__arrow-Height: 16px;

    /**
     * @prop --og-combobox__button__arrow-Padding:
     * Padding of the toggle icon
     */
    --og-combobox__button__arrow-Padding: 22px 2px 0 2px;

    user-select: none;
    display: flex;
    flex-direction: column;
    width: auto;
    max-width: inherit;
    max-height: inherit;
    cursor: pointer;
    background: var(--og-combobox-Background);
    opacity: var(--og-combobox-Opacity);

    box-sizing: border-box;
    *, *::before, *::after { box-sizing: inherit; }
}

// <og-combobox> "on focus"
:host(.is-focused) {
    --og-combobox__indicator-Width: 100%;
}

// <og-combobox> disabled properties
:host([disabled]) {
    cursor: default;
    --og-combobox-Opacity: .3;
}



// Wrapper for the 'allways visible' part of the 'combobox'
.og-combobox__header {
    border-bottom:
        var(--og-combobox-BorderWidth)
        var(--og-combobox-BorderStyle)
        var(--og-combobox-BorderColor);
    display: flex;
    margin: 4px;
    outline: var(--og-combobox-Outline);
    position: relative;
}

// Native input element inside 'combobox' header.
.og-combobox__input {
    flex: 1;
    background: transparent;
    border: none;
    cursor: inherit;
    outline: none;
    color: var(--og-combobox-Color);
    font-size: var(--og-combobox-FontSize);
    user-select: none;
    margin: 0;
    padding: var(--og-combobox-Padding);
    width: 100%;

    &::placeholder {
        color: var(--og-combobox__placeholder-Color);
    }

    // Prevent Text Selection on :focus
    &::selection {
        background: transparent;
    }
}


.og-combobox__button {
    flex: none;
    width: var(--og-combobox__button__arrow-Width);
    height: var(--og-combobox__button__arrow-Height);
    padding: var(--og-combobox__button__arrow-Padding);
}

.og-combobox__indicator {
    display: var(--og-combobox__indicator-Display);
    position: absolute;
    bottom: calc(var(--og-combobox-BorderWidth) * -1);
    left: 0;
    height: var(--og-combobox__indicator-Height);
    background: var(--og-combobox__indicator-Background);
    width: var(--og-combobox__indicator-Width);
    transition: width .2s ease;
}


.og-combobox__button__arrow {
    transition: transform 0.1s;
    overflow: visible;
}

.og-combobox__button__arrow--collapsed {
    transform: rotate(180deg);
}

.og-combobox__button__arrow__line {
    stroke-linecap: round;
    stroke-linejoin: round;
}
