// =============================================================================
// CSS CUSTOM PROPERTIES
// =============================================================================

/**
 * @prop --og-button-Background: Main background color of the button
 * @prop --og-button-Background--active: Background color when the button is clicked
 * @prop --og-button-Background--disabled: Background color when the button is disabled
 * @prop --og-button-Background--hover: Background color when the button is hovered
 * @prop --og-button-BorderColor: Main border color of the button
 * @prop --og-button-BorderColor--active: Border color when the button is clicked
 * @prop --og-button-BorderColor--disabled: Border color when the button is disabled
 * @prop --og-button-BorderColor--hover: Border color when the button is hovered
 * @prop --og-button-BorderRadius: Border radius of the button
 * @prop --og-button-Color: Text color of the button label
 * @prop --og-button-Color--active: Text color when the button is clicked
 * @prop --og-button-Color--disabled: Text color when the button is disabled
 * @prop --og-button-Color--hover: Text color when the button is hovered
 */

// -----------------------------------------------------------------------------
// Base
// -----------------------------------------------------------------------------

:host {
  // All Component Variables
  // Map Variables to Properties
  --Display: inline-block;
  --Height: auto;

  /**
   * @prop --MinWidth:
   * Minimum width of the Button.
   */
  --MinWidth: NULL;
  --MaxHeight: inherit;
  --Padding: var(--PADDING, 0.75rem 1.5rem);    // TODO: use --OG-PADDING
  --BorderWidth: 0;
  --BorderStyle: solid;

  --og-button-BorderRadius:         var( --OG-BORDER-RADIUS, #{$og-border-radius});

  --og-button-Background:           var(--OG-COLOR-SECONDARY--100--20, #{$og-color-secondary--100--20});
  --og-button-Background--hover:    var(--OG-COLOR-SECONDARY--100--30, #{$og-color-secondary--100--30});
  --og-button-Background--active:   var(--OG-COLOR-SECONDARY--100--10, #{$og-color-secondary--100--10});
  --og-button-Background--disabled: var(--OG-COLOR-SECONDARY--100--07, #{$og-color-secondary--100--07});

  --og-button-Color:                var(--OG-COLOR-SHADE--100, #{$og-color-shade--100});
  --og-button-Color--hover:         var(--OG-COLOR-SHADE--100, #{$og-color-shade--100});
  --og-button-Color--active:        var(--OG-COLOR-SHADE--100, #{$og-color-shade--100});
  --og-button-Color--disabled:      var(--OG-COLOR-SHADE--100--30, #{$og-color-shade--100--30});

  --og-button-BorderColor:           var(--OG-COLOR-SECONDARY--100--20, #{$og-color-secondary--100--20});
  --og-button-BorderColor--hover:    var(--OG-COLOR-SECONDARY--100--30, #{$og-color-secondary--100--30});
  --og-button-BorderColor--active:   var(--OG-COLOR-SECONDARY--100--10, #{$og-color-secondary--100--10});
  --og-button-BorderColor--disabled: var(--OG-COLOR-SECONDARY--100--07, #{$og-color-secondary--100--07});

  --og-button-FontWeight: var(--OG-FONT-WEIGHT--MEDIUM, 500);

  /**
   * @prop --og-button-WhiteSpace:
   * White Space behavior of the Button text. Used to truncate overflowing text.
   */
  --og-button-WhiteSpace: NULL;

  /**
   * @prop --og-button-WhiteSpace:
   * Text Overflow behavior. Used to truncate overflowing text.
   */
    --og-button-TextOverflow: NULL;


  --BoxShadow: var(--og-button-BoxShadow);
  --FontFamily: var(--og-button-FontFamily, inherit);
  --FontSize: var(--og-button-FontSize, inherit);
  --Outline: none;
  --TextTransform: uppercase;

  display: var(--Display);
  min-width: var(--MinWidth);
  max-width: 100%;
  height: var(--Height);
  max-height: var(--maxHeight);

  font-family: var(--FontFamily);
  font-size: var(--FontSize);
  font-weight: var(--og-button-FontWeight, normal);

  user-select: none;

  box-sizing: border-box;
  *, *::before, *::after { box-sizing: inherit; }
}

:host(:not(.og-button--text-wrap)) {
    --MinWidth: 0;
    --og-button-WhiteSpace: nowrap;
    --og-button-TextOverflow: ellipsis;
}



:host([data-context~='workflow']) {
    --og-button-Background: var(--OG-COLOR-PRIMARY--100, #{$og-color-primary--100});
    --og-button-Background--hover: var(--OG-COLOR-PRIMARY--120, #{$og-color-primary--120});
    --og-button-Background--active: var(--OG-COLOR-PRIMARY--80, #{$og-color-primary--80});
    --og-button-Background--disabled: var(--OG-COLOR-PRIMARY--100--30, #{$og-color-primary--100--30});

    --og-button-Color: var(--OG-COLOR-SHADE--0, #{$og-color-shade--0});
    --og-button-Color--hover: var(--OG-COLOR-SHADE--0, #{$og-color-shade--0});
    --og-button-Color--active: var(--OG-COLOR-SHADE--0, #{$og-color-shade--0});
    --og-button-Color--disabled: var(--OG-COLOR-SHADE--0--30, #{$og-color-shade--0--30});
}

// 'Link' version
:host([data-context~="link"]) {
    --og-button-Background: transparent;
    --og-button-Background--hover: var(--OG-COLOR-SHADE--100--30, #{$og-color-shade--100--30});
    --og-button-Background--active: var(--OG-COLOR-SHADE--100--10, #{$og-color-shade--100--10});
    --og-button-Background--disabled: transparent;

    --og-button-Color: var(--OG-COLOR-SHADE--100, #{$og-color-shade--100});
    --og-button-Color--hover: var(--OG-COLOR-SHADE--100, #{$og-color-shade--100});
    --og-button-Color--active: var(--OG-COLOR-SHADE--100, #{$og-color-shade--100});
    --og-button-Color--disabled: var(--OG-COLOR-SHADE--100--30, #{$og-color-shade--100--30});
}

:host([data-context~="outline"]) {
  --BorderWidth: 1px;

  --og-button-BorderColor: var(--OG-COLOR-SECONDARY--100--20, #{$og-color-secondary--100--20});
  --og-button-BorderColor--hover: var(--OG-COLOR-SECONDARY--100--30, #{$og-color-secondary--100--30});
  --og-button-BorderColor--active: var(--OG-COLOR-SECONDARY--100--10, #{$og-color-secondary--100--10});
  --og-button-BorderColor--disabled: var(--OG-COLOR-SECONDARY--100--07, #{$og-color-secondary--100--07});

  --og-button-Background: transparent;
  --og-button-Background--hover: transparent;
  --og-button-Background--active: transparent;
  --og-button-Background--disabled: transparent;
}

// Native <button> element
.og-button {
  background: var(--og-button-Background);
  border: var(--BorderWidth) var(--BorderStyle) var(--og-button-BorderColor);
  border-radius: var(--og-button-BorderRadius);
  color: var(--og-button-Color);
  display: block;
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  height: 100%;
  max-height: inherit;
  max-width: inherit;
  overflow: hidden;
  padding: var(--Padding);
  text-overflow: var(--og-button-TextOverflow);
  text-transform: var(--TextTransform);
  transition-duration: 150ms;
  transition-property: background-color;
  transition-timing-function: ease-in-out;
  width: 100%;
  white-space: var(--og-button-WhiteSpace);

  // 'Focus' state
  &:focus {
    outline: none;
  }

  // 'Hover' state
  &:hover {
    --og-button-Background: var(--og-button-Background--hover);
    --og-button-BorderColor: var(--og-button-BorderColor--hover);
    --og-button-Color: var(--og-button-Color--hover);
    cursor: pointer;
    transition-duration: 300ms;
  }

  // 'Active' state
  &:active {
    --og-button-Background: var(--og-button-Background--active);
    --og-button-BorderColor: var(--og-button-BorderColor--active);
    --og-button-Color: var(--og-button-Color--active);
    transition-duration: 300ms;
  }

  // 'Disabled' state
  &:disabled {
    --og-button-Background: var(--og-button-Background--disabled);
    --og-button-BorderColor: var(--og-button-BorderColor--disabled);
    --og-button-Color: var(--og-button-Color--disabled);
    cursor: default;
  }
}
